/////////////////////////////////////
/////////////////////////////////////
/////////////////////////////////////
//WARNING
//This file has been autogenerated.
//Do NOT make modifications directly to it as they will be overwritten!
/////////////////////////////////////
/////////////////////////////////////
/////////////////////////////////////

#ifndef QUANTICO_GETDATA_H
#define QUANTICO_GETDATA_H

#include <ComponentAPI.h>
#include <ApplicationListenerAPI.h>
#include <ControlAIListenerAPI.h>
#include <DamageAspectListenerAPI.h>
#include <DebugUIListenerAPI.h>
#include <MissionEditorAPI.h>
#include <MissionEditorListenerAPI.h>
#include <MissionListenerAPI.h>
#include <WeaponSystemAspectListenerAPI.h>
#include <WorldListenerAPI.h>

APIResult GEARS_API Component_Initialize(_In_ const char* component_folder);
APIResult GEARS_API Component_OnStart(_In_ APIManager_v6* api_manager, _In_ NativeModuleHandle proxy_handle);
APIResult GEARS_API Component_OnStop();
APIResult GEARS_API Component_Shutdown();
APIResult GEARS_API Component_IsParallelizable(_Out_ bool32_t* parallelizable);
APIResult GEARS_API Component_GetName(_Inout_ int32_t* name_length, _Out_opt_ char* name);
APIResult GEARS_API Component_GetVersion(_Inout_ int32_t* version_length, _Out_opt_ char* version);

APIResult GEARS_API ApplicationListener_OnBeforeSimulation(_In_ float32_t delta);
APIResult GEARS_API ApplicationListener_OnAfterSimulation(_In_ float32_t delta);

void GEARS_API ControlAIListener_OnMessage(_In_ ObjectHandle_v3 sender, _In_ const char* subject, _In_ const char* parameters, _In_ int32_t parameters_size);
void GEARS_API ControlAIListener_OnError(_In_ const char* error_message);

APIResult GEARS_API DamageAspectListener_OnDamageChange(_In_ ObjectHandle_v3 object, _In_ ObjectHandle_v3 source, _In_ float32_t damage);
APIResult GEARS_API DamageAspectListener_OnDestruction(_In_ ObjectHandle_v3 object, _In_ ObjectHandle_v3 source);
APIResult GEARS_API DamageAspectListener_OnHit(_In_ const HitEvent_v2* hit_info);

void GEARS_API DebugUIListener_OnRenderMainWindow();
void GEARS_API DebugUIListener_OnRenderCustomWindow();
void GEARS_API DebugUIListener_OnRenderHMDWindow();

APIResult GEARS_API MissionEditor_GetMode(_Out_ MissionEditorMode_v1* mode);
APIResult GEARS_API MissionEditor_Open(_In_ const char* map_id, _In_opt_ const GeoPosition_v3* initial_position);
APIResult GEARS_API MissionEditor_LoadMission(_In_ const char* mission_name, _In_ bool32_t is_multiplayer);
APIResult GEARS_API MissionEditor_SelectObject(_In_ ObjectHandle_v3 object);
APIResult GEARS_API MissionEditor_DeselectObject(_In_ ObjectHandle_v3 object);
APIResult GEARS_API MissionEditor_CenterCameraOnObject(_In_ ObjectHandle_v3 object);
APIResult GEARS_API MissionEditor_TriggerObjectContextMenu(_In_ ObjectHandle_v3 object, _In_opt_ const ScreenPosition_v3* position);
APIResult GEARS_API MissionEditor_LoadEmptyMission(_In_ const char* map_id, _In_opt_ const GeoPosition_v3* initial_position);
APIResult GEARS_API MissionEditor_CollapseOrbatObject(_In_ ObjectHandle_v3 object, _In_ bool32_t collapse);
APIResult GEARS_API MissionEditor_IsCollapsedInOrbat(_In_ ObjectHandle_v3 object, _Out_ bool32_t* collapsed);
APIResult GEARS_API MissionEditor_HasAspect(_In_ ObjectHandle_v3 object, _Out_ bool32_t* has_aspect);
APIResult GEARS_API MissionEditor_GetObjectProperty(_In_ ObjectHandle_v3 object, _In_ const char* name, _Out_opt_ char* value, _Inout_ int32_t* value_length);
APIResult GEARS_API MissionEditor_SetObjectProperty(_In_ ObjectHandle_v3 object, _In_ const char* name, _In_ const char* value);

APIResult GEARS_API MissionEditorListener_OnClose();
APIResult GEARS_API MissionEditorListener_OnObjectSelectionChange(_In_ ObjectHandle_v3 object, _In_ bool32_t selected);
APIResult GEARS_API MissionEditorListener_OnMapExport(_In_ GeoPosition_v3 begin, _In_ GeoPosition_v3 end, _In_ float32_t scale, _In_ float32_t detail, _In_ MapExportMode_v1 mode, _In_ const MapExportInterface_v1* mei, _In_opt_ const char** layers, _In_opt_ int32_t layer_count);
APIResult GEARS_API MissionEditorListener_OnObjectExpandCollapse(_In_ ObjectHandle_v3 object, _In_ bool32_t expanded);

APIResult GEARS_API MissionListener_OnMissionStart(_In_ bool32_t restart);
APIResult GEARS_API MissionListener_OnMissionEnd(_In_ bool32_t restart);
APIResult GEARS_API MissionListener_OnMissionLoad(_In_ const char* mission_name);
APIResult GEARS_API MissionListener_OnMissionUnload(_In_ const char* mission_name);
APIResult GEARS_API MissionListener_OnPlayerSwitchedUnits(_In_ ObjectHandle_v3 old_entity, _In_ ObjectHandle_v3 new_entity);

APIResult GEARS_API WeaponSystemAspectListener_OnFire(_In_ ObjectHandle_v3 shooter, _In_ ObjectHandle_v3 shot);
APIResult GEARS_API WeaponSystemAspectListener_OnAmmoHit(_In_ const HitEvent_v2* hit_info);

void GEARS_API WorldListener_OnObjectCreation(_In_ ObjectHandle_v3 object);
void GEARS_API WorldListener_OnObjectDeletion(_In_ ObjectHandle_v3 object);
void GEARS_API WorldListener_OnLocalObjectPromotion(_In_ ObjectHandle_v3 old_handle, _In_ ObjectHandle_v3 new_handle);

#endif
