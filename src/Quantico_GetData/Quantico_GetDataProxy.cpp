/////////////////////////////////////
/////////////////////////////////////
/////////////////////////////////////
//WARNING
//This file has been autogenerated.
//Do NOT make modifications directly to it as they will be overwritten!
/////////////////////////////////////
/////////////////////////////////////
/////////////////////////////////////

#include "Quantico_GetDataProxy.h"
#include "Quantico_GetData.h"
#include <LogAPI.h>
#include <WorldAPI.h>
#include <SimulationAspectAPI.h>
#include <EnvironmentAPI.h>
#include <TransformationAspectAPI.h>
#include <LifeformAspectAPI.h>
#include <IMGuiAPI.h>
#include <DebugUIAPI.h>
#include <CameraAspectAPI.h>
#include <MissionAPI.h>
#include <ScriptAPI.h>
#include <DamageAspectAPI.h>
#include <WeaponSystemAspectAPI.h>
#include <WaypointAspectAPI.h>
#include <ORBATAPI.h>

GEARS_EXPORT void GEARS_API RegisterAPI_v6(APIManager_RegisterAPI_Func_v6 register_api)
{
  //Register ComponentAPI_v6
  {
    static ComponentAPI_v6 api;
    APIInfo_v6 api_info;

    api.Initialize = Component_Initialize;
    api.OnStart = Component_OnStart;
    api.OnStop = Component_OnStop;
    api.Shutdown = Component_Shutdown;
    api.IsParallelizable = Component_IsParallelizable;
    api.GetName = Component_GetName;
    api.GetVersion = Component_GetVersion;

    api_info._api = &api;
    api_info._version = 6;
    api_info._privilege = 0;

    register_api(ComponentAPI_Handle, &api_info);
  }

  //Register ApplicationListenerAPI_v1
  {
    static ApplicationListenerAPI_v1 api;
    APIInfo_v6 api_info;

    api.OnBeforeSimulation = ApplicationListener_OnBeforeSimulation;
    api.OnAfterSimulation = ApplicationListener_OnAfterSimulation;

    api_info._api = &api;
    api_info._version = 1;
    api_info._privilege = 0;

    register_api(ApplicationListenerAPI_Handle, &api_info);
  }

  //Register ControlAIAspectAPI_v1
  {
    static ControlAIAspectAPI_v1 api;
    APIInfo_v6 api_info;

    api.HasAspect = ControlAIAspect_HasAspect;
    api.ReceiveMessage = ControlAIAspect_ReceiveMessage;
    api.SetBehaviorTree = ControlAIAspect_SetBehaviorTree;
    api.GetBehaviorTree = ControlAIAspect_GetBehaviorTree;
    api.SetBlackboardVariable = ControlAIAspect_SetBlackboardVariable;
    api.GetBlackboardVariable = ControlAIAspect_GetBlackboardVariable;

    api_info._api = &api;
    api_info._version = 1;
    api_info._privilege = 0;

    register_api(ControlAIAspectAPI_Handle, &api_info);
  }

  //Register DebugUIListenerAPI_v2
  {
    static DebugUIListenerAPI_v2 api;
    APIInfo_v6 api_info;

    api.OnRenderMainWindow = DebugUIListener_OnRenderMainWindow;
    api.OnRenderCustomWindow = DebugUIListener_OnRenderCustomWindow;
    api.OnRenderHMDWindow = DebugUIListener_OnRenderHMDWindow;

    api_info._api = &api;
    api_info._version = 2;
    api_info._privilege = 0;

    register_api(DebugUIListenerAPI_Handle, &api_info);
  }

  //Register MissionEditorAPI_v2
  {
    static MissionEditorAPI_v2 api;
    APIInfo_v6 api_info;

    api.GetMode = MissionEditor_GetMode;
    api.Open = MissionEditor_Open;
    api.LoadMission = MissionEditor_LoadMission;
    api.SelectObject = MissionEditor_SelectObject;
    api.DeselectObject = MissionEditor_DeselectObject;
    api.CenterCameraOnObject = MissionEditor_CenterCameraOnObject;
    api.TriggerObjectContextMenu = MissionEditor_TriggerObjectContextMenu;
    api.LoadEmptyMission = MissionEditor_LoadEmptyMission;
    api.CollapseOrbatObject = MissionEditor_CollapseOrbatObject;
    api.IsCollapsedInOrbat = MissionEditor_IsCollapsedInOrbat;
    api.HasAspect = MissionEditor_HasAspect;
    api.GetObjectProperty = MissionEditor_GetObjectProperty;
    api.SetObjectProperty = MissionEditor_SetObjectProperty;

    api_info._api = &api;
    api_info._version = 2;
    api_info._privilege = 0;

    register_api(MissionEditorAPI_Handle, &api_info);
  }

  //Register MissionEditorListenerAPI_v2
  {
    static MissionEditorListenerAPI_v2 api;
    APIInfo_v6 api_info;

    api.OnClose = MissionEditorListener_OnClose;
    api.OnObjectSelectionChange = MissionEditorListener_OnObjectSelectionChange;
    api.OnMapExport = MissionEditorListener_OnMapExport;
    api.OnObjectExpandCollapse = MissionEditorListener_OnObjectExpandCollapse;

    api_info._api = &api;
    api_info._version = 2;
    api_info._privilege = 0;

    register_api(MissionEditorListenerAPI_Handle, &api_info);
  }

  //Register MissionListenerAPI_v3
  {
    static MissionListenerAPI_v3 api;
    APIInfo_v6 api_info;

    api.OnMissionStart = MissionListener_OnMissionStart;
    api.OnMissionEnd = MissionListener_OnMissionEnd;
    api.OnMissionLoad = MissionListener_OnMissionLoad;
    api.OnMissionUnload = MissionListener_OnMissionUnload;
    api.OnPlayerSwitchedUnits = MissionListener_OnPlayerSwitchedUnits;

    api_info._api = &api;
    api_info._version = 3;
    api_info._privilege = 0;

    register_api(MissionListenerAPI_Handle, &api_info);
  }

  //Register WorldListenerAPI_v2
  {
    static WorldListenerAPI_v2 api;
    APIInfo_v6 api_info;

    api.OnObjectCreation = WorldListener_OnObjectCreation;
    api.OnObjectDeletion = WorldListener_OnObjectDeletion;
    api.OnLocalObjectPromotion = WorldListener_OnLocalObjectPromotion;

    api_info._api = &api;
    api_info._version = 2;
    api_info._privilege = 0;

    register_api(WorldListenerAPI_Handle, &api_info);
  }
}
